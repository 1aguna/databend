// Copyright 2020-2021 The Datafuse Authors.
//
// SPDX-License-Identifier: Apache-2.0.

syntax = "proto3";

// meta data types for FuseStore
package store_meta;

message Db {
  int64 db_id = 1;
  // Every modification has a corresponding unique ver.
  int64 ver = 20;
  map<string, int64> table_name_to_id = 2;
  map<int64, Table> tables = 3;
}

message Table {
  int64 table_id = 1;
  // Every modification has a corresponding unique ver.
  int64 ver = 20;

  bytes schema = 5;

  map<string, string> options = 30;
  // a func(string, Vec<ReplicationGroupId>) mapping PartitionBy expr to
  // replication group. A FuseQuery process should consider this to determine
  // where to send the read or write operations.
  bytes placement_policy = 10;
  // repeated ReplicationGroupId ReplicationGroupIds
}

// A Cmd serves as a raft log entry to commit an atomic operation into meta data
// storage.

message CmdCreateDatabase {
  string db_name = 20;
  Db db = 50;
}

message CmdCreateTable {
  string db_name = 20;
  string table_name = 30;
  Table table = 40;
}

// meta service

message SetReq {
  string key = 1;
  string value = 2;

  // if_absent==true:  AKA add. write key=value only when key is absent.
  // if_absent==false: AKA set. always overrides.
  bool if_absent = 3;
}
message SetReply { bool ok = 1; }

message GetReq { string key = 1; }
message GetReply {
  bool ok = 1;
  string key = 2;
  string value = 3;
}

service MetaService {

  rpc Set(SetReq) returns (SetReply) {}
  rpc Get(GetReq) returns (GetReply) {}
}
